
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'Y\x11y@)\xea\x1e\xc7P\xe6\xab\x17t\x9f\xa9\xab'
    
_lr_action_items = {'RPAREN':([1,3,4,5,6,7,8,9,10,],[3,-5,7,9,-6,-1,-3,-2,-4,]),'NUMBER':([1,3,6,7,8,9,10,],[5,-5,-6,-1,-3,-2,-4,]),'COMMA':([4,5,],[8,10,]),'LPAREN':([2,],[6,]),'ID':([0,1,3,6,7,8,9,10,],[2,4,-5,-6,-1,-3,-2,-4,]),'$end':([1,3,6,7,8,9,10,],[0,-5,-6,-1,-3,-2,-4,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression ID RPAREN','expression',3,'p_expression_method','/root/share/storkvm/storkvm/ply_rule.py',97),
  ('expression -> expression NUMBER RPAREN','expression',3,'p_expression_method','/root/share/storkvm/storkvm/ply_rule.py',98),
  ('expression -> expression ID COMMA','expression',3,'p_expression_method','/root/share/storkvm/storkvm/ply_rule.py',99),
  ('expression -> expression NUMBER COMMA','expression',3,'p_expression_method','/root/share/storkvm/storkvm/ply_rule.py',100),
  ('expression -> expression RPAREN','expression',2,'p_expression_method','/root/share/storkvm/storkvm/ply_rule.py',101),
  ('expression -> ID LPAREN','expression',2,'p_expression_method','/root/share/storkvm/storkvm/ply_rule.py',102),
  ('assignment -> ID EQUAL1 expression','assignment',3,'p_assignment_equal1','/root/share/storkvm/storkvm/ply_rule.py',137),
]
