Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMMENT
    RPAREN
    DIVIDE
    IF
    OBJECT
    ELSE
    EQUAL1
    PLUS
    LPAREN
    TIMES
    MINUS
    DOT
    OR

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression + expression
Rule 2     expression -> expression - expression
Rule 3     expression -> expression * expression
Rule 4     expression -> expression / expression
Rule 5     expression -> NUMBER

Terminals, with rules where they appear

*                    : 3
+                    : 1
-                    : 2
/                    : 4
AND                  : 
COMMENT              : 
DIVIDE               : 
DOT                  : 
ELSE                 : 
EQUAL1               : 
IF                   : 
LPAREN               : 
MINUS                : 
NUMBER               : 5
OBJECT               : 
OR                   : 
PLUS                 : 
RPAREN               : 
TIMES                : 
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 2 3 3 4 4 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression + expression
    (2) expression -> . expression - expression
    (3) expression -> . expression * expression
    (4) expression -> . expression / expression
    (5) expression -> . NUMBER

    NUMBER          shift and go to state 1

    expression                     shift and go to state 2

state 1

    (5) expression -> NUMBER .

    +               reduce using rule 5 (expression -> NUMBER .)
    -               reduce using rule 5 (expression -> NUMBER .)
    *               reduce using rule 5 (expression -> NUMBER .)
    /               reduce using rule 5 (expression -> NUMBER .)
    $end            reduce using rule 5 (expression -> NUMBER .)


state 2

    (0) S' -> expression .
    (1) expression -> expression . + expression
    (2) expression -> expression . - expression
    (3) expression -> expression . * expression
    (4) expression -> expression . / expression

    +               shift and go to state 4
    -               shift and go to state 3
    *               shift and go to state 5
    /               shift and go to state 6


state 3

    (2) expression -> expression - . expression
    (1) expression -> . expression + expression
    (2) expression -> . expression - expression
    (3) expression -> . expression * expression
    (4) expression -> . expression / expression
    (5) expression -> . NUMBER

    NUMBER          shift and go to state 1

    expression                     shift and go to state 7

state 4

    (1) expression -> expression + . expression
    (1) expression -> . expression + expression
    (2) expression -> . expression - expression
    (3) expression -> . expression * expression
    (4) expression -> . expression / expression
    (5) expression -> . NUMBER

    NUMBER          shift and go to state 1

    expression                     shift and go to state 8

state 5

    (3) expression -> expression * . expression
    (1) expression -> . expression + expression
    (2) expression -> . expression - expression
    (3) expression -> . expression * expression
    (4) expression -> . expression / expression
    (5) expression -> . NUMBER

    NUMBER          shift and go to state 1

    expression                     shift and go to state 9

state 6

    (4) expression -> expression / . expression
    (1) expression -> . expression + expression
    (2) expression -> . expression - expression
    (3) expression -> . expression * expression
    (4) expression -> . expression / expression
    (5) expression -> . NUMBER

    NUMBER          shift and go to state 1

    expression                     shift and go to state 10

state 7

    (2) expression -> expression - expression .
    (1) expression -> expression . + expression
    (2) expression -> expression . - expression
    (3) expression -> expression . * expression
    (4) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    $end            reduce using rule 2 (expression -> expression - expression .)
    +               shift and go to state 4
    -               shift and go to state 3
    *               shift and go to state 5
    /               shift and go to state 6

  ! +               [ reduce using rule 2 (expression -> expression - expression .) ]
  ! -               [ reduce using rule 2 (expression -> expression - expression .) ]
  ! *               [ reduce using rule 2 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 2 (expression -> expression - expression .) ]


state 8

    (1) expression -> expression + expression .
    (1) expression -> expression . + expression
    (2) expression -> expression . - expression
    (3) expression -> expression . * expression
    (4) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    $end            reduce using rule 1 (expression -> expression + expression .)
    +               shift and go to state 4
    -               shift and go to state 3
    *               shift and go to state 5
    /               shift and go to state 6

  ! +               [ reduce using rule 1 (expression -> expression + expression .) ]
  ! -               [ reduce using rule 1 (expression -> expression + expression .) ]
  ! *               [ reduce using rule 1 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 1 (expression -> expression + expression .) ]


state 9

    (3) expression -> expression * expression .
    (1) expression -> expression . + expression
    (2) expression -> expression . - expression
    (3) expression -> expression . * expression
    (4) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    $end            reduce using rule 3 (expression -> expression * expression .)
    +               shift and go to state 4
    -               shift and go to state 3
    *               shift and go to state 5
    /               shift and go to state 6

  ! +               [ reduce using rule 3 (expression -> expression * expression .) ]
  ! -               [ reduce using rule 3 (expression -> expression * expression .) ]
  ! *               [ reduce using rule 3 (expression -> expression * expression .) ]
  ! /               [ reduce using rule 3 (expression -> expression * expression .) ]


state 10

    (4) expression -> expression / expression .
    (1) expression -> expression . + expression
    (2) expression -> expression . - expression
    (3) expression -> expression . * expression
    (4) expression -> expression . / expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
    $end            reduce using rule 4 (expression -> expression / expression .)
    +               shift and go to state 4
    -               shift and go to state 3
    *               shift and go to state 5
    /               shift and go to state 6

  ! +               [ reduce using rule 4 (expression -> expression / expression .) ]
  ! -               [ reduce using rule 4 (expression -> expression / expression .) ]
  ! *               [ reduce using rule 4 (expression -> expression / expression .) ]
  ! /               [ reduce using rule 4 (expression -> expression / expression .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 7 resolved as shift
WARNING: shift/reduce conflict for - in state 7 resolved as shift
WARNING: shift/reduce conflict for * in state 7 resolved as shift
WARNING: shift/reduce conflict for / in state 7 resolved as shift
WARNING: shift/reduce conflict for + in state 8 resolved as shift
WARNING: shift/reduce conflict for - in state 8 resolved as shift
WARNING: shift/reduce conflict for * in state 8 resolved as shift
WARNING: shift/reduce conflict for / in state 8 resolved as shift
WARNING: shift/reduce conflict for + in state 9 resolved as shift
WARNING: shift/reduce conflict for - in state 9 resolved as shift
WARNING: shift/reduce conflict for * in state 9 resolved as shift
WARNING: shift/reduce conflict for / in state 9 resolved as shift
WARNING: shift/reduce conflict for + in state 10 resolved as shift
WARNING: shift/reduce conflict for - in state 10 resolved as shift
WARNING: shift/reduce conflict for * in state 10 resolved as shift
WARNING: shift/reduce conflict for / in state 10 resolved as shift
